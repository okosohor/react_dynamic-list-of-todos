{"version":3,"sources":["types/TodoStatus.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","helpers.tsx","index.tsx"],"names":["TodoStatus","TodoList","todos","setSelectedTodo","selectedTodo","className","length","map","todo","id","completed","cn","title","type","onClick","TodoFilter","searchQuery","setSearchQuery","todoStatus","setTodoStatus","onSubmit","event","preventDefault","value","onChange","target","ALL","COMPLETED","ACTIVE","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","userId","clearSelectedTodo","useState","user","setUser","useEffect","getUser","catch","error","Error","message","href","email","name","App","setTodos","isLoading","setIsLoading","err","finally","visibleTodos","useMemo","status","filter","toLowerCase","includes","getFilteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.292240af.chunk.js","sourcesContent":["export enum TodoStatus {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[]\n  setSelectedTodo: (todo: Todo) => void;\n  selectedTodo: null | Todo;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    {todos.length > 1 && (\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n    )}\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={cn({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                setSelectedTodo(todo);\n              }}\n            >\n              <span className=\"icon\">\n                <i className={cn('far', {\n                  'fa-eye-slash': todo.id === selectedTodo?.id,\n                  'fa-eye': todo.id !== selectedTodo?.id,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { TodoStatus } from '../../types/TodoStatus';\n\ninterface Props {\n  searchQuery: string,\n  setSearchQuery: React.Dispatch<React.SetStateAction<string>>\n  todoStatus: TodoStatus,\n  setTodoStatus: React.Dispatch<React.SetStateAction<TodoStatus>>,\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  searchQuery,\n  setSearchQuery,\n  todoStatus,\n  setTodoStatus,\n}) => {\n  const handleClick = () => {\n    setSearchQuery('');\n  };\n\n  const handleSetTodoStatus = (\n    event :React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    switch (event.target.value) {\n      case 'all':\n        setTodoStatus(TodoStatus.ALL);\n        break;\n      case 'completed':\n        setTodoStatus(TodoStatus.COMPLETED);\n        break;\n      case 'active':\n        setTodoStatus(TodoStatus.ACTIVE);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleInputChange = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setSearchQuery(event.target.value);\n  };\n\n  return (\n    <form\n      onSubmit={event => event.preventDefault()}\n      className=\"field has-addons\"\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={todoStatus}\n            onChange={handleSetTodoStatus}\n          >\n            <option value={TodoStatus.ALL}>All</option>\n            <option value={TodoStatus.ACTIVE}>Active</option>\n            <option value={TodoStatus.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          value={searchQuery}\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchQuery && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              aria-label=\"clear search query\"\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClick}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  userId: number,\n  selectedTodo: Todo | null,\n  clearSelectedTodo: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  userId,\n  selectedTodo,\n  clearSelectedTodo,\n}) => {\n  const [user, setUser] = useState<null | User >(null);\n\n  useEffect(() => {\n    getUser(userId)\n      .then(setUser)\n      .catch(error => {\n        throw new Error(error.message);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            <button\n              aria-label=\"clear selected todo\"\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={clearSelectedTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './app.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { getFilteredTodos } from './helpers';\nimport { TodoStatus } from './types/TodoStatus';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [todoStatus, setTodoStatus] = useState(TodoStatus.ALL);\n  const [selectedTodo, setSelectedTodo] = useState<null | Todo>(null);\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos)\n      .catch(err => {\n        throw new Error(err.message);\n      })\n      .finally(() => (setIsLoading(false)));\n  }, []);\n\n  const clearSelectedTodo = () => {\n    setSelectedTodo(null);\n  };\n\n  const visibleTodos = useMemo(() => (\n    getFilteredTodos(todos, searchQuery, todoStatus)\n  ), [todoStatus, todos, searchQuery]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div\n              className=\"block\"\n            >\n              <TodoFilter\n                searchQuery={searchQuery}\n                setSearchQuery={setSearchQuery}\n                todoStatus={todoStatus}\n                setTodoStatus={setTodoStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  setSelectedTodo={setSelectedTodo}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          userId={selectedTodo.userId}\n          selectedTodo={selectedTodo}\n          clearSelectedTodo={clearSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { TodoStatus } from './types/TodoStatus';\n\nexport const getFilteredTodos = (\n  todos: Todo[],\n  searchQuery: string,\n  status: string,\n) => {\n  let visibleTodos = todos;\n\n  if (status !== TodoStatus.ALL) {\n    switch (status) {\n      case TodoStatus.ACTIVE:\n        visibleTodos = visibleTodos.filter(todo => !todo.completed);\n        break;\n\n      case TodoStatus.COMPLETED:\n        visibleTodos = visibleTodos.filter(todo => todo.completed);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  if (searchQuery) {\n    visibleTodos = visibleTodos\n      .filter(todo => todo.title\n        .toLowerCase().includes(searchQuery.toLowerCase()));\n  }\n\n  return visibleTodos;\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}